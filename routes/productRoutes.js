const express = require("express");
const Product = require("../models/Product");
const { authMiddleware, adminMiddleware } = require("../middlewares/authMiddleware");

const router = express.Router();

// ðŸ“Œ Láº¥y danh sÃ¡ch táº¥t cáº£ sáº£n pháº©m
router.get("/", async (req, res) => {
    try {
        const products = await Product.find();
        res.json(products);
    } catch (error) {
        res.status(500).json({ message: "Lá»—i server", error: error.message });
    }
});

// ðŸ“Œ Láº¥y thÃ´ng tin sáº£n pháº©m theo ID
router.get("/:id", async (req, res) => {
    try {
        const product = await Product.findById(req.params.id);
        if (!product) {
            return res.status(404).json({ message: "KhÃ´ng tÃ¬m tháº¥y sáº£n pháº©m" });
        }
        res.json(product);
    } catch (error) {
        res.status(500).json({ message: "Lá»—i server", error: error.message });
    }
});

// ðŸ“Œ ThÃªm sáº£n pháº©m (Chá»‰ admin)
router.post("/", authMiddleware, adminMiddleware, async (req, res) => {
    try {
        const { name, price, description, category, stock, image } = req.body;
        if (!name || !price || !description || !category || !stock || !image) {
            return res.status(400).json({ message: "Thiáº¿u thÃ´ng tin sáº£n pháº©m" });
        }

        const newProduct = new Product({ name, price, description, category, stock, image });
        await newProduct.save();
        res.status(201).json(newProduct);
    } catch (error) {
        console.error("ðŸ”¥ Lá»—i khi thÃªm sáº£n pháº©m:", error);
        res.status(500).json({ message: "Lá»—i server", error: error.message });
    }
});


// ðŸ“Œ XÃ³a sáº£n pháº©m (Chá»‰ admin)
router.delete("/:id", authMiddleware, adminMiddleware, async (req, res) => {
    try {
        const deletedProduct = await Product.findByIdAndDelete(req.params.id);
        
        if (!deletedProduct) {
            return res.status(404).json({ message: "KhÃ´ng tÃ¬m tháº¥y sáº£n pháº©m" });
        }

        res.json({ message: "XÃ³a sáº£n pháº©m thÃ nh cÃ´ng" });
    } catch (error) {
        res.status(500).json({ message: "Lá»—i server", error: error.message });
    }
});

// ðŸ“Œ Cáº­p nháº­t sáº£n pháº©m theo ID
router.put("/:id", authMiddleware, adminMiddleware, async (req, res) => {
    try {
        const updateData = {};
        const fields = ["name", "price", "description", "category", "stock", "image"];

        fields.forEach(field => {
            if (req.body[field] !== undefined) updateData[field] = req.body[field];
        });

        const updatedProduct = await Product.findByIdAndUpdate(req.params.id, updateData, { new: true });

        if (!updatedProduct) {
            return res.status(404).json({ message: "KhÃ´ng tÃ¬m tháº¥y sáº£n pháº©m" });
        }

        res.json(updatedProduct);
    } catch (error) {
        console.error("ðŸ”¥ Lá»—i cáº­p nháº­t sáº£n pháº©m:", error);
        res.status(500).json({ message: "Lá»—i server", error: error.message });
    }
});

module.exports = router;
