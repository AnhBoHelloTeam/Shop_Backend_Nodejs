const express = require("express");
const mongoose = require("mongoose");
const User = require("../models/User");
const { authMiddleware, adminMiddleware } = require("../middlewares/authMiddleware");

const router = express.Router();

// üìå L·∫•y danh s√°ch t·∫•t c·∫£ ng∆∞·ªùi d√πng (Ch·ªâ admin)
router.get("/", authMiddleware, adminMiddleware, async (req, res) => {
    try {
        const users = await User.find().select("-password"); // ·∫®n m·∫≠t kh·∫©u
        res.json(users);
    } catch (error) {
        console.error("üî• L·ªói khi l·∫•y danh s√°ch ng∆∞·ªùi d√πng:", error);
        res.status(500).json({ message: "L·ªói server" });
    }
});

// üìå L·∫•y th√¥ng tin ng∆∞·ªùi d√πng theo ID (Ch·ªâ admin ho·∫∑c ch√≠nh user ƒë√≥)
router.get("/:id", authMiddleware, async (req, res) => {
    try {
        const { id } = req.params;

        // ‚úÖ Ki·ªÉm tra xem ID c√≥ h·ª£p l·ªá kh√¥ng
        if (!mongoose.Types.ObjectId.isValid(id)) {
            return res.status(400).json({ message: "ID ng∆∞·ªùi d√πng kh√¥ng h·ª£p l·ªá" });
        }

        const user = await User.findById(id).select("-password");

        // ‚úÖ Ki·ªÉm tra n·∫øu kh√¥ng t√¨m th·∫•y user
        if (!user) {
            return res.status(404).json({ message: "Kh√¥ng t√¨m th·∫•y ng∆∞·ªùi d√πng" });
        }

        // ‚úÖ Ki·ªÉm tra quy·ªÅn truy c·∫≠p
        if (req.user.role !== "admin" && req.user.userId !== user._id.toString()) {
            return res.status(403).json({ message: "B·∫°n kh√¥ng c√≥ quy·ªÅn xem th√¥ng tin n√†y" });
        }

        res.json(user);
    } catch (error) {
        console.error("üî• L·ªói khi l·∫•y th√¥ng tin ng∆∞·ªùi d√πng:", error);
        res.status(500).json({ message: "L·ªói server" });
    }
});

module.exports = router;
